@{
    ViewData["isDashboard"] = true;
    var dailyMetrics = ViewBag.DailyBudgetMetrics as BudgetWise.Models.BudgetMetrics;
    var monthlyMetrics = ViewBag.MonthlyBudgetMetrics as BudgetWise.Models.BudgetMetrics;
    var yearlyMetrics = ViewBag.YearlyBudgetMetrics as BudgetWise.Models.BudgetMetrics;
    var topCategories = ViewBag.TopExpenseCategories as List<BudgetWise.Models.CategoryExpense>;
    var savingsRate = ViewBag.SavingsRate != null ? (decimal)ViewBag.SavingsRate : 0;
    var expenseBreakdown = ViewBag.ExpenseBreakdown as List<BudgetWise.Models.ExpenseBreakdown>;
    var recentTransactions = ViewBag.RecentTransactions as List<BudgetWise.Models.RecentTransaction>;
    var monthlyTrendData = ViewBag.MonthlyTrendChartData as IEnumerable<BudgetWise.Models.MonthlyTrendData>;
    
    bool isAuthenticated = ViewData["isAuthenticated"] != null && (bool)ViewData["isAuthenticated"];
}

@if (isAuthenticated)
{
    <div class="alert alert-success mb-4">
        <div class="d-flex align-items-center">
            <i class="fa-solid fa-circle-check me-3 fs-4"></i>
            <div>
                <strong>Your Dashboard</strong> - This page displays your personal financial data. Add transactions to see your data visualized.
            </div>
        </div>
    </div>
}

<div class="dashboard-header mb-4">
    <h2 class="text-white mb-0">Financial Dashboard</h2>
    <p class="text-muted mb-0">Track your income, expenses, and savings</p>
</div>

<ul class="nav nav-tabs dashboard-tabs mb-4" id="dashboardTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab" aria-controls="overview" aria-selected="true">
            <i class="fa-solid fa-chart-pie me-2"></i>Overview
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="budget-tab" data-bs-toggle="tab" data-bs-target="#budget" type="button" role="tab" aria-controls="budget" aria-selected="false">
            <i class="fa-solid fa-calculator me-2"></i>Budget Insights
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="trends-tab" data-bs-toggle="tab" data-bs-target="#trends" type="button" role="tab" aria-controls="trends" aria-selected="false">
            <i class="fa-solid fa-chart-line me-2"></i>Trends
        </button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="transactions-tab" data-bs-toggle="tab" data-bs-target="#transactions" type="button" role="tab" aria-controls="transactions" aria-selected="false">
            <i class="fa-solid fa-list me-2"></i>Recent Activity
        </button>
    </li>
</ul>

<div class="tab-content" id="dashboardTabContent">
    <!-- Overview Tab -->
    <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview-tab">
        <!-- Summary Cards -->
        <div class="row gx-4 gy-4 mb-4">
            <div class="col-12 col-md-4">
                <div class="metric-card">
                    <div class="metric-icon income">
                        <i class="fa-solid fa-arrow-trend-up"></i>
                    </div>
                    <div class="metric-content">
                        <span class="metric-label">Total Income</span>
                        <h3 class="metric-value">@ViewBag.TotalIncome</h3>
                        <span class="metric-subtext">All time</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="metric-card">
                    <div class="metric-icon expense">
                        <i class="fa-solid fa-arrow-trend-down"></i>
                    </div>
                    <div class="metric-content">
                        <span class="metric-label">Total Expenses</span>
                        <h3 class="metric-value">@ViewBag.TotalExpense</h3>
                        <span class="metric-subtext">All time</span>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-4">
                <div class="metric-card">
                    <div class="metric-icon balance">
                        <i class="fa-solid fa-scale-balanced"></i>
                    </div>
                    <div class="metric-content">
                        <span class="metric-label">Net Balance</span>
                        <h3 class="metric-value">@ViewBag.Balance</h3>
                        <span class="metric-subtext">Income - Expenses</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Charts Row -->
        <div class="row gx-4 gy-4">
            <div class="col-12 col-lg-6">
                <div class="widget chart h-100">
                    <div class="chart-header">
                        <h5 class="chart-title">Expense Breakdown</h5>
                        <span class="chart-subtitle">Last 30 days</span>
                    </div>
                    <div class="chart-body">
                        <div id="expensesPieChart" style="height: 350px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="widget chart h-100">
                    <div class="chart-header">
                        <h5 class="chart-title">Top Expense Categories</h5>
                        <span class="chart-subtitle">Last 30 days</span>
                    </div>
                    <div class="chart-body">
                        @if (topCategories != null && topCategories.Any())
                        {
                            <div class="category-list">
                                @foreach (var category in topCategories)
                                {
                                    <div class="category-item">
                                        <div class="category-info">
                                            <span class="category-icon">@Html.Raw(category.Icon)</span>
                                            <span class="category-name">@category.CategoryName</span>
                                        </div>
                                        <div class="category-stats">
                                            <span class="category-amount">$@category.Amount.ToString("N0")</span>
                                            <span class="category-percentage">@category.Percentage.ToString("F1")%</span>
                                        </div>
                                        <div class="category-bar">
                                            <div class="category-bar-fill" style="width: @category.Percentage%"></div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-5">
                                <i class="fa-solid fa-chart-pie fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No expense data available</p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Budget Insights Tab -->
    <div class="tab-pane fade" id="budget" role="tabpanel" aria-labelledby="budget-tab">
        <div class="row gx-4 gy-4 mb-4">
            <!-- Daily Budget -->
            <div class="col-12 col-md-4">
                <div class="budget-card">
                    <h5 class="budget-period">Daily Budget</h5>
                    <div class="budget-metrics">
                        <div class="budget-metric">
                            <span class="metric-label">Income</span>
                            <span class="metric-value income">$@(dailyMetrics?.Income.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Expenses</span>
                            <span class="metric-value expense">$@(dailyMetrics?.Expense.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Balance</span>
                            <span class="metric-value @(dailyMetrics?.Balance >= 0 ? "positive" : "negative")">
                                $@(dailyMetrics?.Balance.ToString("N0") ?? "0")
                            </span>
                        </div>
                    </div>
                    <div class="budget-footer">
                        <span class="transactions-count">@(dailyMetrics?.TransactionCount ?? 0) transactions</span>
                    </div>
                </div>
            </div>

            <!-- Monthly Budget -->
            <div class="col-12 col-md-4">
                <div class="budget-card">
                    <h5 class="budget-period">@(monthlyMetrics?.Period ?? "Monthly") Budget</h5>
                    <div class="budget-metrics">
                        <div class="budget-metric">
                            <span class="metric-label">Income</span>
                            <span class="metric-value income">$@(monthlyMetrics?.Income.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Expenses</span>
                            <span class="metric-value expense">$@(monthlyMetrics?.Expense.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Balance</span>
                            <span class="metric-value @(monthlyMetrics?.Balance >= 0 ? "positive" : "negative")">
                                $@(monthlyMetrics?.Balance.ToString("N0") ?? "0")
                            </span>
                        </div>
                    </div>
                    <div class="budget-stats">
                        <div class="stat">
                            <span class="stat-label">Avg Daily Expense</span>
                            <span class="stat-value">$@(monthlyMetrics?.AverageExpense.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="stat">
                            <span class="stat-label">Avg Daily Income</span>
                            <span class="stat-value">$@(monthlyMetrics?.AverageIncome.ToString("N0") ?? "0")</span>
                        </div>
                    </div>
                    <div class="budget-footer">
                        <span class="transactions-count">@(monthlyMetrics?.TransactionCount ?? 0) transactions</span>
                    </div>
                </div>
            </div>

            <!-- Yearly Budget -->
            <div class="col-12 col-md-4">
                <div class="budget-card">
                    <h5 class="budget-period">@(yearlyMetrics?.Period ?? "Yearly") Budget</h5>
                    <div class="budget-metrics">
                        <div class="budget-metric">
                            <span class="metric-label">Income</span>
                            <span class="metric-value income">$@(yearlyMetrics?.Income.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Expenses</span>
                            <span class="metric-value expense">$@(yearlyMetrics?.Expense.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="budget-metric">
                            <span class="metric-label">Balance</span>
                            <span class="metric-value @(yearlyMetrics?.Balance >= 0 ? "positive" : "negative")">
                                $@(yearlyMetrics?.Balance.ToString("N0") ?? "0")
                            </span>
                        </div>
                    </div>
                    <div class="budget-stats">
                        <div class="stat">
                            <span class="stat-label">Avg Daily Expense</span>
                            <span class="stat-value">$@(yearlyMetrics?.AverageExpense.ToString("N0") ?? "0")</span>
                        </div>
                        <div class="stat">
                            <span class="stat-label">Avg Daily Income</span>
                            <span class="stat-value">$@(yearlyMetrics?.AverageIncome.ToString("N0") ?? "0")</span>
                        </div>
                    </div>
                    <div class="budget-footer">
                        <span class="transactions-count">@(yearlyMetrics?.TransactionCount ?? 0) transactions</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Savings Rate -->
        <div class="row gx-4 gy-4">
            <div class="col-12">
                <div class="widget">
                    <div class="savings-rate-card">
                        <h5 class="mb-3">Savings Rate (Last 30 Days)</h5>
                        <div class="savings-rate-display">
                            <div class="savings-percentage @(savingsRate >= 0 ? "positive" : "negative")">
                                @savingsRate.ToString("F1")%
                            </div>
                            <div class="savings-description">
                                @if (savingsRate > 0)
                                {
                                    <p>Great job! You're saving @savingsRate.ToString("F1")% of your income.</p>
                                }
                                else if (savingsRate == 0)
                                {
                                    <p>You're breaking even. Try to reduce expenses to start saving.</p>
                                }
                                else
                                {
                                    <p>You're spending more than you earn. Consider reducing expenses.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Trends Tab -->
    <div class="tab-pane fade" id="trends" role="tabpanel" aria-labelledby="trends-tab">
        <div class="row gx-4 gy-4">
            <div class="col-12">
                <div class="widget chart">
                    <div class="chart-header">
                        <h5 class="chart-title">Income vs Expenses Trend</h5>
                        <span class="chart-subtitle">Last 12 months</span>
                    </div>
                    <div class="chart-body">
                        <div id="trendChart" style="height: 400px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="widget chart">
                    <div class="chart-header">
                        <h5 class="chart-title">Monthly Comparison</h5>
                        <span class="chart-subtitle">Income and Expenses</span>
                    </div>
                    <div class="chart-body">
                        <div id="monthlyBarChart" style="height: 350px;"></div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-lg-6">
                <div class="widget chart">
                    <div class="chart-header">
                        <h5 class="chart-title">Balance Trend</h5>
                        <span class="chart-subtitle">Monthly net balance</span>
                    </div>
                    <div class="chart-body">
                        <div id="balanceChart" style="height: 350px;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity Tab -->
    <div class="tab-pane fade" id="transactions" role="tabpanel" aria-labelledby="transactions-tab">
        <div class="widget">
            <h5 class="mb-4">Recent Transactions</h5>
            @if (recentTransactions != null && recentTransactions.Any())
            {
                <div class="transaction-list">
                    @foreach (var transaction in recentTransactions)
                    {
                        <div class="transaction-item">
                            <div class="transaction-icon @(transaction.Type == "Income" ? "income" : "expense")">
                                @Html.Raw(transaction.Icon)
                            </div>
                            <div class="transaction-details">
                                <div class="transaction-category">@transaction.CategoryName</div>
                                @if (!string.IsNullOrEmpty(transaction.Note))
                                {
                                    <div class="transaction-note">@transaction.Note</div>
                                }
                                <div class="transaction-date">@transaction.Date.ToString("MMM dd, yyyy")</div>
                            </div>
                            <div class="transaction-amount @(transaction.Type == "Income" ? "income" : "expense")">
                                @(transaction.Type == "Income" ? "+" : "-")$@transaction.Amount.ToString("N0")
                            </div>
                        </div>
                    }
                </div>
                <div class="text-center mt-4">
                    <a href="/Transaction" class="btn btn-outline-primary">View All Transactions</a>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fa-solid fa-receipt fa-3x text-muted mb-3"></i>
                    <p class="text-muted">No recent transactions</p>
                    <a href="/Transaction/AddOrEdit" class="btn btn-primary">Add Transaction</a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    
    <script>
        // Highcharts theme
        Highcharts.theme = {
            colors: ['#65da41', '#ff4e48', '#4a90e2', '#f5a623', '#bd10e0', '#50e3c2', '#b8e986', '#ffda44'],
            chart: {
                backgroundColor: '#1a222b',
                style: {
                    fontFamily: 'inherit'
                }
            },
            title: {
                style: {
                    color: '#fff'
                }
            },
            subtitle: {
                style: {
                    color: '#aaa'
                }
            },
            legend: {
                itemStyle: {
                    color: '#fff'
                },
                itemHoverStyle: {
                    color: '#ccc'
                }
            },
            xAxis: {
                labels: {
                    style: {
                        color: '#fff'
                    }
                },
                gridLineColor: '#32414d'
            },
            yAxis: {
                labels: {
                    style: {
                        color: '#fff'
                    }
                },
                gridLineColor: '#32414d'
            },
            plotOptions: {
                series: {
                    dataLabels: {
                        color: '#fff'
                    }
                }
            },
            credits: {
                enabled: false
            }
        };
        
        Highcharts.setOptions(Highcharts.theme);
        
        // Expense Pie Chart
        @if (expenseBreakdown != null && expenseBreakdown.Any())
        {
            <text>
            Highcharts.chart('expensesPieChart', {
                chart: {
                    type: 'pie'
                },
                title: {
                    text: null
                },
                plotOptions: {
                    pie: {
                        allowPointSelect: true,
                        cursor: 'pointer',
                        dataLabels: {
                            enabled: true,
                            format: '<b>{point.name}</b>: ${point.y:,.0f}'
                        },
                        showInLegend: true
                    }
                },
                series: [{
                    name: 'Amount',
                    colorByPoint: true,
                    data: [
                        @foreach (var expense in expenseBreakdown)
                        {
                            <text>{ name: '@expense.Category', y: @expense.Amount },</text>
                        }
                    ]
                }]
            });
            </text>
        }
        
        // Trend Chart
        @if (monthlyTrendData != null && monthlyTrendData.Any())
        {
            <text>
            Highcharts.chart('trendChart', {
                chart: {
                    type: 'line'
                },
                title: {
                    text: null
                },
                xAxis: {
                    categories: [@Html.Raw(string.Join(",", monthlyTrendData.Select(m => $"'{m.Month}'")))],
                    crosshair: true
                },
                yAxis: {
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    shared: true,
                    valuePrefix: '$'
                },
                plotOptions: {
                    line: {
                        dataLabels: {
                            enabled: false
                        },
                        enableMouseTracking: true
                    }
                },
                series: [{
                    name: 'Income',
                    data: [@string.Join(",", monthlyTrendData.Select(m => m.Income))],
                    color: '#65da41'
                }, {
                    name: 'Expenses',
                    data: [@string.Join(",", monthlyTrendData.Select(m => m.Expense))],
                    color: '#ff4e48'
                }]
            });
            
            // Monthly Bar Chart
            Highcharts.chart('monthlyBarChart', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: null
                },
                xAxis: {
                    categories: [@Html.Raw(string.Join(",", monthlyTrendData.Take(6).Select(m => $"'{m.Month}'")))],
                    crosshair: true
                },
                yAxis: {
                    title: {
                        text: 'Amount ($)'
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                        '<td style="padding:0"><b>${point.y:,.0f}</b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series: [{
                    name: 'Income',
                    data: [@string.Join(",", monthlyTrendData.Take(6).Select(m => m.Income))],
                    color: '#65da41'
                }, {
                    name: 'Expenses',
                    data: [@string.Join(",", monthlyTrendData.Take(6).Select(m => m.Expense))],
                    color: '#ff4e48'
                }]
            });
            
            // Balance Chart
            Highcharts.chart('balanceChart', {
                chart: {
                    type: 'area'
                },
                title: {
                    text: null
                },
                xAxis: {
                    categories: [@Html.Raw(string.Join(",", monthlyTrendData.Select(m => $"'{m.Month}'")))],
                    crosshair: true
                },
                yAxis: {
                    title: {
                        text: 'Balance ($)'
                    }
                },
                tooltip: {
                    valuePrefix: '$'
                },
                plotOptions: {
                    area: {
                        fillOpacity: 0.5
                    }
                },
                series: [{
                    name: 'Balance',
                    data: [@string.Join(",", monthlyTrendData.Select(m => m.Balance))],
                    color: '#4a90e2',
                    negativeColor: '#ff4e48'
                }]
            });
            </text>
        }
    </script>
}